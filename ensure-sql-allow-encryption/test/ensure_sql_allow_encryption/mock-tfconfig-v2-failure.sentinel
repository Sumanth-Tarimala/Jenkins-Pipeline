import "strings"

providers = {
	"google": {
		"alias": "",
		"config": {
			"credentials": {
				"constant_value": null,
			},
			"project": {
				"references": [
					"var.project",
				],
			},
			"region": {
				"references": [
					"var.region",
				],
			},
			"zone": {
				"references": [
					"var.zone",
				],
			},
		},
		"module_address":      "",
		"name":                "google",
		"provider_config_key": "google",
		"version_constraint":  "",
	},
	"google-beta": {
		"alias": "",
		"config": {
			"credentials": {
				"constant_value": null,
			},
			"project": {
				"references": [
					"var.project",
				],
			},
			"region": {
				"references": [
					"var.region",
				],
			},
			"zone": {
				"references": [
					"var.zone",
				],
			},
		},
		"module_address":      "",
		"name":                "google-beta",
		"provider_config_key": "google-beta",
		"version_constraint":  "",
	},
	"random": {
		"alias":               "",
		"config":              {},
		"module_address":      "",
		"name":                "random",
		"provider_config_key": "random",
		"version_constraint":  "",
	},
}

resources = {
	"google_sql_database_instance.instance": {
		"address": "google_sql_database_instance.instance",
		"config": {
			"database_version": {
				"constant_value": "MYSQL_5_7",
			},
			"name": {
				"references": [
					"random_id.db_name_suffix11.hex",
					"random_id.db_name_suffix11",
				],
			},
			"region": {
				"constant_value": "us-east4",
			},
			"settings": [
				{
					"ip_configuration": [
						{
							"ipv4_enabled": {
								"constant_value": true,
							},
						},
					],
					"tier": {
						"constant_value": "db-f1-micro",
					},
				},
			],
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "instance",
		"provider_config_key": "google-beta",
		"provisioners":        [],
		"type":                "google_sql_database_instance",
	},
	"random_id.db_name_suffix11": {
		"address": "random_id.db_name_suffix11",
		"config": {
			"byte_length": {
				"constant_value": 4,
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "db_name_suffix11",
		"provider_config_key": "random",
		"provisioners":        [],
		"type":                "random_id",
	},
	"random_id.id": {
		"address": "random_id.id",
		"config": {
			"byte_length": {
				"constant_value": 8,
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "id",
		"provider_config_key": "random",
		"provisioners":        [],
		"type":                "random_id",
	},
}

provisioners = {}

variables = {
	"branchname": {
		"default":        "release",
		"description":    "Branch name for testing",
		"module_address": "",
		"name":           "branchname",
	},
	"name_prefix": {
		"default":        "sentinel",
		"description":    "The name prefix for the database instance. Will be appended with a random string. Use lowercase letters, numbers, and hyphens. Start with a letter.",
		"module_address": "",
		"name":           "name_prefix",
	},
	"project": {
		"default":        "sentinel-sumanth",
		"description":    "The project ID to host the database in.",
		"module_address": "",
		"name":           "project",
	},
	"region": {
		"default":        "us-east4",
		"description":    "The region to host the database in.",
		"module_address": "",
		"name":           "region",
	},
	"zone": {
		"default":        "us-east4-a",
		"description":    "The zoneto host the database in.",
		"module_address": "",
		"name":           "zone",
	},
}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
